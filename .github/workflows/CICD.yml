name: CICD
on:
  workflow_dispatch: {}
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: cargo test

  build:
    name: Build Binary
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { target: aarch64-unknown-linux-gnu       , os: ubuntu-latest      , system: linux      }
          - { target: i686-pc-windows-gnu             , os: windows-latest     , system: windows    }
          - { target: i686-pc-windows-msvc            , os: windows-latest     , system: windows    }
          - { target: i686-unknown-linux-gnu          , os: ubuntu-latest      , system: linux      }
          - { target: x86_64-apple-darwin             , os: macos-latest       , system: macos      }
          - { target: x86_64-pc-windows-gnu           , os: windows-latest     , system: windows    }
          - { target: x86_64-pc-windows-msvc          , os: windows-latest     , system: windows    }
          - { target: x86_64-unknown-linux-gnu        , os: ubuntu-latest      , system: linux      }
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --verbose --release --target ${{ matrix.target }}
        env:
          RUST_BACKTRACE: 1

      - name: Strip binary (linux and macos)
        if: matrix.system == 'linux' || matrix.system == 'macos'
        run: strip "target/${{ matrix.target }}/release/ctbox"

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md archive/
          cd archive
          if [ "${{ matrix.system }}" = "windows" ]; then
            cp "../target/${{ matrix.target }}/release/ctbox.exe" ./
          else
            cp "../target/${{ matrix.target }}/release/ctbox" ./
          fi
            tar -czf "${{ matrix.target }}.tar.gz" LICENSE README.md ctbox
      - name: Upload archive
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.target }}.tar.gz
          path: archive/${{ matrix.target }}.tar.gz
